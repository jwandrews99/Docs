{"remainingRequest":"/Users/jack/Documents/GitHub/Docs/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/jack/Documents/GitHub/Docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--7-2!/Users/jack/Documents/GitHub/Docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--7-3!/Users/jack/Documents/GitHub/Docs/docs/js/tech/loops.md","dependencies":[{"path":"/Users/jack/Documents/GitHub/Docs/docs/js/tech/loops.md","mtime":1585344082010},{"path":"/Users/jack/Documents/GitHub/Docs/.docusaurus/docusaurus-plugin-content-docs/site-docs-js-tech-loops-md-1df.json","mtime":1585344343505},{"path":"/Users/jack/Documents/GitHub/Docs/node_modules/cache-loader/dist/cjs.js","mtime":1585256602861},{"path":"/Users/jack/Documents/GitHub/Docs/node_modules/babel-loader/lib/index.js","mtime":1585256602734},{"path":"/Users/jack/Documents/GitHub/Docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1585256621747},{"path":"/Users/jack/Documents/GitHub/Docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1585256618966}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/jack/Documents/GitHub/Docs/docs/js/tech/loops.md"],"names":["React","mdx","frontMatter","metadata","rightToc","value","id","children","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {};\nexport const metadata = {\n  \"id\": \"js/tech/loops\",\n  \"title\": \"loops\",\n  \"description\": \"# loops\",\n  \"source\": \"@site/docs/js/tech/loops.md\",\n  \"permalink\": \"/docs/js/tech/loops\"\n};\n  /* @jsx mdx */\n\nexport const rightToc = [{\n  value: 'Loops in Js',\n  id: 'loops-in-js',\n  children: []\n}, {\n  value: 'Manually repeating tasks',\n  id: 'manually-repeating-tasks',\n  children: []\n}, {\n  value: 'The for Loop &amp; looping in reverse',\n  id: 'the-for-loop--looping-in-reverse',\n  children: []\n}, {\n  value: 'Looping through Arrays',\n  id: 'looping-through-arrays',\n  children: []\n}, {\n  value: 'Nested Loops',\n  id: 'nested-loops',\n  children: []\n}, {\n  value: 'While Loop',\n  id: 'while-loop',\n  children: []\n}, {\n  value: 'DO While Statements',\n  id: 'do-while-statements',\n  children: []\n}, {\n  value: 'Break Keyword',\n  id: 'break-keyword',\n  children: []\n}];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"loops\"\n    }}>{`loops`}</h1>\n    <h2 {...{\n      \"id\": \"loops-in-js\"\n    }}>{`Loops in Js`}</h2>\n    <p>{`A loop is a programming tool that repeats a set of instructions until a specified condition, called a stopping condition is reached.`}</p>\n    <h2 {...{\n      \"id\": \"manually-repeating-tasks\"\n    }}>{`Manually repeating tasks`}</h2>\n    <p>{`This means manually repeating multiple lines of code in order to achieve the end result.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`const vacationSpots = ['spain', 'america', 'france'];\nconsole.log(vacationSpots[0]);\nconsole.log(vacationSpots[1]);\nconsole.log(vacationSpots[2]);\n// prints spain, america, france in a list\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"the-for-loop--looping-in-reverse\"\n    }}>{`The for Loop & looping in reverse`}</h2>\n    <p>{`The for loop allows us to repeat a block of code either x number of times or until a condition is met.`}</p>\n    <p>{`The typical for loop includes an iterator variable that usually appears in all three expressions. The iterator variable is initialized, checked against the stopping condition, and assigned a new value on each loop iteration.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`for (let counter = 0; counter < 4; counter++) {\n  console.log(counter);\n}\n`}</code></pre>\n    <p>{`The above code counts up. if you want to loop backwards `}{`(`}{`count backwards`}{`)`}{` use the `}<inlineCode parentName=\"p\">{`>=`}</inlineCode>{` operator in your stopping condition and use the `}<inlineCode parentName=\"p\">{`--`}</inlineCode>{` in the iteration statement.`}</p>\n    <h2 {...{\n      \"id\": \"looping-through-arrays\"\n    }}>{`Looping through Arrays`}</h2>\n    <p>{`For loops can work over data structures. Arrays hold lists of data, like customer names or product information.`}</p>\n    <p>{`To loop through each element in an array, a for loop should use the array’s .length property in its condition.`}</p>\n    <p>{`When we use i to iterate through arrays we can think of it as being short-hand for the word index. Notice how our stopping condition checks that i is less than animals.length. Remember that arrays are zero-indexed, the index of the last element of an array is equivalent to the length of that array minus 1.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`const rapperArray = [\"Lil' Kim\", \"Jay-Z\", \"Notorious B.I.G.\", \"Tupac\"];\n\n// Write your code below\nfor (let i= 0; i < rapperArray.length; i++) {\n  console.log(rapperArray[i]);\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"nested-loops\"\n    }}>{`Nested Loops`}</h2>\n    <p>{`Nested loops are loops running inside another loop. One use of a nested loop is to compare elements in two arrays.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`const myArray = [6, 19, 20];\nconst yourArray = [19, 81, 2];\nfor (let i = 0; i < myArray.length; i++) {\n  for (let j = 0; j < yourArray.length; j++) {\n    if (myArray[i] === yourArray[j]) {\n      console.log('Both loops have the number: ' + yourArray[j])\n    }\n  }\n}; // 19\n`}</code></pre>\n    <p>{`For each element in the outer loop array, myArray, the inner loop will run in its entirety comparing the current element from the outer array, myArray`}{`[`}{`i`}{`]`}{`, to each element in the inner array, yourArray`}{`[`}{`j`}{`]`}{`. When it finds a match, it prints a string to the console. In the example above both arrays have the number 19, this will be logged.`}</p>\n    <h2 {...{\n      \"id\": \"while-loop\"\n    }}>{`While Loop`}</h2>\n    <p>{`Converting a for loop into a while loop`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`// A for loop that prints 1, 2, and 3\nfor (let counterOne = 1; counterOne < 4; counterOne++){\n  console.log(counterOne);\n}\n\n// A while loop that prints 1, 2, and 3W\nlet counterTwo = 1;\nwhile (counterTwo < 4) {\n  console.log(counterTwo);\n  counterTwo++;\n}\n`}</code></pre>\n    <p>{`In the example above: counterTwo is the declared variable before the loop. As it is a global variable it can be accessed in the loop.`}</p>\n    <p>{`The loop starts with the while keyword followed by the stopping condition. Everytime the loop goes round this is checked to see if the condition has been met. If the condition is true the code will run, if false the loop will stop.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`// Check if the current card is spade\nconst cards = ['diamond', 'spade', 'heart', 'club'];\n\nlet currentCard; //variable with no value \nwhile (currentCard != 'spade') {\n  currentCard = cards[Math.floor(Math.random() * 4)]; // randoms the card in the hand\n  console.log(currentCard); // prints current card\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"do-while-statements\"\n    }}>{`DO While Statements`}</h2>\n    <p>{`Sometimes you want a piece of code to run at least once, then loop depending on a specific condition after its first run.  A do...while statement says to do a task once and then keep doing it until a specified condition is no longer met.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`let countString = '';\nlet i = 0;\n\ndo {\n  countString = countString + i;\n  i++;\n} while (i < 5);\n\nconsole.log(countString);\n`}</code></pre>\n    <p>{`The looping stops when the condition evaluates to false. Unlike a normal while statement, a do while statement will always run at least once, regardless of the condition.`}</p>\n    <p>{`Example of checking if adding something even if we can't`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`do {\n cupsAdded++\n} while (cupsAdded < cupsOfSugarNeeded);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"break-keyword\"\n    }}>{`Break Keyword`}</h2>\n    <p>{`When we want to stop a loop from continuing to execute even though the original stopping condition we wrote for our loop hasn’t been met, we can use the keyword break.`}</p>\n    <p>{`The break keyword allows programs to “break” out of the loop from within the loop’s block.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`for (let i = 0; i < 99; i++) {\n  if (i > 2 ) {\n     break;\n  }\n  console.log('Banana.');\n}\n\nconsole.log('Orange you glad I broke out the loop!');\n`}</code></pre>\n    <p>{`With breaks, test conditions can be added besides the stopping condition, and exit the loop when they're met.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`const rapperArray = [\"Lil' Kim\", \"Jay-Z\", \"Notorious B.I.G.\", \"Tupac\"];\n\nfor (let i = 0; i < rapperArray.length; i++){\n  console.log(rapperArray[i]);\n  if (rapperArray[i] === 'Notorious B.I.G.'){\n    break;\n  }\n}\n\nconsole.log(\"And if you don't know, now you know.\");\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}