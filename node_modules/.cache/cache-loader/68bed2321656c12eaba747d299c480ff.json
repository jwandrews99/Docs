{"remainingRequest":"/Users/jack/Documents/GitHub/Docs/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/jack/Documents/GitHub/Docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--7-2!/Users/jack/Documents/GitHub/Docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--7-3!/Users/jack/Documents/GitHub/Docs/docs/back-end/ExpressJS/Routers.md","dependencies":[{"path":"/Users/jack/Documents/GitHub/Docs/docs/back-end/ExpressJS/Routers.md","mtime":1585344082002},{"path":"/Users/jack/Documents/GitHub/Docs/.docusaurus/docusaurus-plugin-content-docs/site-docs-back-end-express-js-routers-md-f87.json","mtime":1585395212793},{"path":"/Users/jack/Documents/GitHub/Docs/node_modules/cache-loader/dist/cjs.js","mtime":1585256602861},{"path":"/Users/jack/Documents/GitHub/Docs/node_modules/babel-loader/lib/index.js","mtime":1585256602734},{"path":"/Users/jack/Documents/GitHub/Docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1585256621747},{"path":"/Users/jack/Documents/GitHub/Docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1585256618966}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL2phY2svRG9jdW1lbnRzL0dpdEh1Yi9Eb2NzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzIjtpbXBvcnQgUmVhY3QgZnJvbSdyZWFjdCc7aW1wb3J0e21keH1mcm9tJ0BtZHgtanMvcmVhY3QnO2V4cG9ydCBjb25zdCBmcm9udE1hdHRlcj17aWQ6J2V4cHJlc3Mtcm91dGVycycsdGl0bGU6J0V4cHJlc3MuSlMoKSBSb3V0ZXJzJ307ZXhwb3J0IGNvbnN0IG1ldGFkYXRhPXsiaWQiOiJiYWNrLWVuZC9FeHByZXNzSlMvZXhwcmVzcy1yb3V0ZXJzIiwidGl0bGUiOiJFeHByZXNzLkpTKCkgUm91dGVycyIsImRlc2NyaXB0aW9uIjoiIyBUaGlzIEZpbGUgSXMgVG9vIEJpZyEiLCJzb3VyY2UiOiJAc2l0ZS9kb2NzL2JhY2stZW5kL0V4cHJlc3NKUy9Sb3V0ZXJzLm1kIiwicGVybWFsaW5rIjoiL2RvY3MvYmFjay1lbmQvRXhwcmVzc0pTL2V4cHJlc3Mtcm91dGVycyJ9Oy8qIEBqc3ggbWR4ICovZXhwb3J0IGNvbnN0IHJpZ2h0VG9jPVtdO2NvbnN0IG1ha2VTaG9ydGNvZGU9bmFtZT0+ZnVuY3Rpb24gTURYRGVmYXVsdFNob3J0Y29kZShwcm9wcyl7Y29uc29sZS53YXJuKCJDb21wb25lbnQgIituYW1lKyIgd2FzIG5vdCBpbXBvcnRlZCwgZXhwb3J0ZWQsIG9yIHByb3ZpZGVkIGJ5IE1EWFByb3ZpZGVyIGFzIGdsb2JhbCBzY29wZSIpO3JldHVybiBtZHgoImRpdiIscHJvcHMpO307Y29uc3QgbGF5b3V0UHJvcHM9e3JpZ2h0VG9jfTtjb25zdCBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoe2NvbXBvbmVudHMsLi4ucHJvcHN9KXtyZXR1cm4gbWR4KE1EWExheW91dCxfZXh0ZW5kcyh7fSxsYXlvdXRQcm9wcyxwcm9wcyx7Y29tcG9uZW50czpjb21wb25lbnRzLG1keFR5cGU6Ik1EWExheW91dCJ9KSxtZHgoImgxIix7ImlkIjoidGhpcy1maWxlLWlzLXRvby1iaWcifSxgVGhpcyBGaWxlIElzIFRvbyBCaWchYCksbWR4KCJwIixudWxsLGBZb3VyIEV4cHJlc3Npb25zL0FuaW1hbHMgcm91dGVzIGFyZSBhbGwgd29ya2luZyB3ZWxsLCBhbmQgb3VyIG1hY2hpbmUgaXMgZnVsbHkgZnVuY3Rpb25hbCEgT3VyIGFwcC5qcyBmaWxlLCBob3dldmVyLCBpcyBnZXR0aW5nIHF1aXRlIGxvbmcgYW5kIGhhcmQgdG8gcmVhZC4gSXTigJlzIGVhc3kgdG8gaW1hZ2luZSB0aGF0IGFzIHdlIGFkZCBmdW5jdGlvbmFsaXR5IHRvIGFuIGFwcGxpY2F0aW9uLCB0aGlzIGZpbGUgd291bGQgZ2V0IGxvbmcgYW5kIGN1bWJlcnNvbWUuYCksbWR4KCJwIixudWxsLGBMdWNraWx5LCBFeHByZXNzIHByb3ZpZGVzIGZ1bmN0aW9uYWxpdHkgdG8gYWxsZXZpYXRlIHRoaXMgcHJvYmxlbTogUm91dGVycy4gUm91dGVycyBhcmUgbWluaSB2ZXJzaW9ucyBvZiBFeHByZXNzIGFwcGxpY2F0aW9ucyDigJQgdGhleSBwcm92aWRlIGZ1bmN0aW9uYWxpdHkgZm9yIGhhbmRsaW5nIHJvdXRlIG1hdGNoaW5nLCByZXF1ZXN0cywgYW5kIHNlbmRpbmcgcmVzcG9uc2VzLCBidXQgdGhleSBkbyBub3Qgc3RhcnQgYSBzZXBhcmF0ZSBzZXJ2ZXIgb3IgbGlzdGVuIG9uIHRoZWlyIG93biBwb3J0cy4gUm91dGVycyB1c2UgYWxsIHRoZSAuZ2V0KCksIC5wdXQoKSwgLnBvc3QoKSwgYW5kIC5kZWxldGUoKSByb3V0ZXMgdGhhdCB5b3Uga25vdyBhbmQgbG92ZS5gKSxtZHgoInAiLG51bGwsYEluIHRoaXMgbGVzc29uLCB3ZSB3aWxsIHVzZSBSb3V0ZXJzIHRvIGNsZWFuIHVwIG91ciBjb2RlIGFuZCBzZXBhcmF0ZSBvdXIgYXBwbGljYXRpb24gaW50byBhIGZpbGUgdG8gaGFuZGxlIGFsbCByb3V0ZXMsIGFuZCBhbm90aGVyIHRvIGhhbmRsZSBhbGwgdGhlIG90aGVyIHJvdXRlcy5gKSxtZHgoImgxIix7ImlkIjoiZXhwcmVzc3JvdXRlciJ9LGBFeHByZXNzLlJvdXRlcmApLG1keCgicCIsbnVsbCxgQW4gRXhwcmVzcyByb3V0ZXIgcHJvdmlkZXMgYSBzdWJzZXQgb2YgRXhwcmVzcyBtZXRob2RzLiBUbyBjcmVhdGUgYW4gaW5zdGFuY2Ugb2Ygb25lLCB3ZSBpbnZva2UgdGhlIC5Sb3V0ZXIoKSBtZXRob2Qgb24gdGhlIHRvcC1sZXZlbCBFeHByZXNzIGltcG9ydC5gKSxtZHgoInAiLG51bGwsYFRvIHVzZSBhIHJvdXRlciwgd2UgbW91bnQgaXQgYXQgYSBjZXJ0YWluIHBhdGggdXNpbmcgYXBwLnVzZSgpIGFuZCBwYXNzIGluIHRoZSByb3V0ZXIgYXMgdGhlIHNlY29uZCBhcmd1bWVudC4gVGhpcyByb3V0ZXIgd2lsbCBub3cgYmUgdXNlZCBmb3IgYWxsIHBhdGhzIHRoYXQgYmVnaW4gd2l0aCB0aGF0IHBhdGggc2VnbWVudC4gVG8gY3JlYXRlIGEgcm91dGVyIHRvIGhhbmRsZSBhbGwgcmVxdWVzdHMgYmVnaW5uaW5nIHdpdGggL21vbnN0ZXJzLCB0aGUgY29kZSB3b3VsZCBsb29rIGxpa2UgdGhpczpgKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwcmUifSx7fSksYGNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7CmNvbnN0IGFwcCA9IGV4cHJlc3MoKTsKCmNvbnN0IG1vbnN0ZXJzID0gewogICcxJzogewogICAgbmFtZTogJ2dvZHppbGxhJywKICAgIGFnZTogMjUwMDAwMDAwCiAgfSwKICAnMic6IHsKICAgIE5hbWU6ICdtYW50aWNvcmUnLAogICAgYWdlOiAyMQogIH0KfQoKY29uc3QgbW9uc3RlcnNSb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpOwoKYXBwLnVzZSgnL21vbnN0ZXJzJywgbW9uc3RlcnNSb3V0ZXIpOwoKbW9uc3RlcnNSb3V0ZXIuZ2V0KCcvOmlkJywgKHJlcSwgcmVzLCBuZXh0KSA9PiB7CiAgY29uc3QgbW9uc3RlciA9IG1vbnN0ZXJzW3JlcS5wYXJhbXMuaWRdOwogIElmIChtb25zdGVyKSB7CiAgICByZXMuc2VuZChtb25zdGVyKTsKICB9IGVsc2UgewogICAgcmVzLnN0YXR1cyg0MDQpLnNlbmQoKTsKICB9Cn0pOwpgKSksbWR4KCJwIixudWxsLGBJbnNpZGUgdGhlIG1vbnN0ZXJzUm91dGVyLCBhbGwgbWF0Y2hpbmcgcm91dGVzIGFyZSBhc3N1bWVkIHRvIGhhdmUgL21vbnN0ZXJzIHByZXBlbmRlZCwgYXMgaXQgaXMgbW91bnRlZCBhdCB0aGF0IHBhdGguIG1vbnN0ZXJzUm91dGVyLmdldCgnLzppZCcpIG1hdGNoZXMgdGhlIGZ1bGwgcGF0aCAvbW9uc3RlcnMvOmlkLmApLG1keCgicCIsbnVsbCxgV2hlbiBhIEdFVCAvbW9uc3RlcnMvMSByZXF1ZXN0IGFycml2ZXMsIEV4cHJlc3MgbWF0Y2hlcyAvbW9uc3RlcnMgaW4gYXBwLnVzZSgpIGJlY2F1c2UgdGhlIGJlZ2lubmluZyBvZiB0aGUgcGF0aCAoJy9tb25zdGVycycpIG1hdGNoZXMuIEV4cHJlc3PigJkgcm91dGUtbWF0Y2hpbmcgYWxnb3JpdGhtIGVudGVycyB0aGUgbW9uc3RlcnNSb3V0ZXLigJhzIHJvdXRlcyB0byBzZWFyY2ggZm9yIGZ1bGwgcGF0aCBtYXRjaGVzLiBTaW5jZSBtb25zdGVyc1JvdXRlci5nZXQoJy86aWQpIGlzIG1vdW50ZWQgYXQgL21vbnN0ZXJzLCB0aGUgdHdvIHBhdGhzIHRvZ2V0aGVyIG1hdGNoIHRoZSBlbnRpcmUgcmVxdWVzdCBwYXRoICgvbW9uc3RlcnMvMSksIHNvIHRoZSByb3V0ZSBtYXRjaGVzIGFuZCB0aGUgY2FsbGJhY2sgaXMgaW52b2tlZC4gVGhlICdnb2R6aWxsYScgbW9uc3RlciBpcyBmZXRjaGVkIGZyb20gdGhlIG1vbnN0ZXJzIGFycmF5IGFuZCBzZW50IGJhY2suYCkpO307TURYQ29udGVudC5pc01EWENvbXBvbmVudD10cnVlOw=="},null]}