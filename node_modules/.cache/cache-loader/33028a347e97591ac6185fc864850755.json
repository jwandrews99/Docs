{"remainingRequest":"/Users/jack/Documents/GitHub/Docs/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/jack/Documents/GitHub/Docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--7-2!/Users/jack/Documents/GitHub/Docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--7-3!/Users/jack/Documents/GitHub/Docs/docs/js/adva/async-await.md","dependencies":[{"path":"/Users/jack/Documents/GitHub/Docs/docs/js/adva/async-await.md","mtime":1585344082006},{"path":"/Users/jack/Documents/GitHub/Docs/.docusaurus/docusaurus-plugin-content-docs/site-docs-js-adva-async-await-md-ff3.json","mtime":1585344343506},{"path":"/Users/jack/Documents/GitHub/Docs/node_modules/cache-loader/dist/cjs.js","mtime":1585256602861},{"path":"/Users/jack/Documents/GitHub/Docs/node_modules/babel-loader/lib/index.js","mtime":1585256602734},{"path":"/Users/jack/Documents/GitHub/Docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1585256621747},{"path":"/Users/jack/Documents/GitHub/Docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1585256618966}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL2phY2svRG9jdW1lbnRzL0dpdEh1Yi9Eb2NzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzIjtpbXBvcnQgUmVhY3QgZnJvbSdyZWFjdCc7aW1wb3J0e21keH1mcm9tJ0BtZHgtanMvcmVhY3QnO2V4cG9ydCBjb25zdCBmcm9udE1hdHRlcj17fTtleHBvcnQgY29uc3QgbWV0YWRhdGE9eyJpZCI6ImpzL2FkdmEvYXN5bmMtYXdhaXQiLCJ0aXRsZSI6ImFzeW5jLWF3YWl0IiwiZGVzY3JpcHRpb24iOiJPZnRlbiBpbiB3ZWIgZGV2ZWxvcG1lbnQsIHdlIG5lZWQgdG8gaGFuZGxlIGFzeW5jaHJvbm91cyBhY3Rpb25z4oCUIGFjdGlvbnMgd2UgY2FuIHdhaXQgb24gd2hpbGUgbW92aW5nIG9uIHRvIG90aGVyIHRhc2tzLiBXZSBtYWtlIHJlcXVlc3RzIHRvIG5ldHdvcmtzLCBkYXRhYmFzZXMsIG9yIGFueSBudW1iZXIgb2Ygc2ltaWxhciBvcGVyYXRpb25zLiBKYXZhU2NyaXB0IGlzIG5vbi1ibG9ja2luZzogaW5zdGVhZCBvZiBzdG9wcGluZyB0aGUgZXhlY3V0aW9uIG9mIGNvZGUgd2hpbGUgaXQgd2FpdHMsIEphdmFTY3JpcHQgdXNlcyBhbiBldmVudC1sb29wIHdoaWNoIGFsbG93cyBpdCB0byBlZmZpY2llbnRseSBleGVjdXRlIG90aGVyIHRhc2tzIHdoaWxlIGl0IGF3YWl0cyB0aGUgY29tcGxldGlvbiBvZiB0aGVzZSBhc3luY2hyb25vdXMgYWN0aW9ucy4iLCJzb3VyY2UiOiJAc2l0ZS9kb2NzL2pzL2FkdmEvYXN5bmMtYXdhaXQubWQiLCJwZXJtYWxpbmsiOiIvZG9jcy9qcy9hZHZhL2FzeW5jLWF3YWl0In07LyogQGpzeCBtZHggKi9leHBvcnQgY29uc3QgcmlnaHRUb2M9W107Y29uc3QgbWFrZVNob3J0Y29kZT1uYW1lPT5mdW5jdGlvbiBNRFhEZWZhdWx0U2hvcnRjb2RlKHByb3BzKXtjb25zb2xlLndhcm4oIkNvbXBvbmVudCAiK25hbWUrIiB3YXMgbm90IGltcG9ydGVkLCBleHBvcnRlZCwgb3IgcHJvdmlkZWQgYnkgTURYUHJvdmlkZXIgYXMgZ2xvYmFsIHNjb3BlIik7cmV0dXJuIG1keCgiZGl2Iixwcm9wcyk7fTtjb25zdCBsYXlvdXRQcm9wcz17cmlnaHRUb2N9O2NvbnN0IE1EWExheW91dD0id3JhcHBlciI7ZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7Y29tcG9uZW50cywuLi5wcm9wc30pe3JldHVybiBtZHgoTURYTGF5b3V0LF9leHRlbmRzKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgicCIsbnVsbCxgT2Z0ZW4gaW4gd2ViIGRldmVsb3BtZW50LCB3ZSBuZWVkIHRvIGhhbmRsZSBhc3luY2hyb25vdXMgYWN0aW9uc+KAlCBhY3Rpb25zIHdlIGNhbiB3YWl0IG9uIHdoaWxlIG1vdmluZyBvbiB0byBvdGhlciB0YXNrcy4gV2UgbWFrZSByZXF1ZXN0cyB0byBuZXR3b3JrcywgZGF0YWJhc2VzLCBvciBhbnkgbnVtYmVyIG9mIHNpbWlsYXIgb3BlcmF0aW9ucy4gSmF2YVNjcmlwdCBpcyBub24tYmxvY2tpbmc6IGluc3RlYWQgb2Ygc3RvcHBpbmcgdGhlIGV4ZWN1dGlvbiBvZiBjb2RlIHdoaWxlIGl0IHdhaXRzLCBKYXZhU2NyaXB0IHVzZXMgYW4gZXZlbnQtbG9vcCB3aGljaCBhbGxvd3MgaXQgdG8gZWZmaWNpZW50bHkgZXhlY3V0ZSBvdGhlciB0YXNrcyB3aGlsZSBpdCBhd2FpdHMgdGhlIGNvbXBsZXRpb24gb2YgdGhlc2UgYXN5bmNocm9ub3VzIGFjdGlvbnMuYCksbWR4KCJwIixudWxsLGBUaGUgYXN5bmMuLi5hd2FpdCBzeW50YXggYWxsb3dzIHVzIHRvIHdyaXRlIGFzeW5jaHJvbm91cyBjb2RlIHRoYXQgcmVhZHMgc2ltaWxhcmx5IHRvIHRyYWRpdGlvbmFsIHN5bmNocm9ub3VzLCBpbXBlcmF0aXZlIHByb2dyYW1zLmApLG1keCgiaDEiLHsiaWQiOiJ0aGUtYXN5bmMta2V5d29yZCJ9LGBUaGUgYXN5bmMgS2V5d29yZGApLG1keCgicCIsbnVsbCxgVGhlIGFzeW5jIGtleXdvcmQgaXMgdXNlZCB0byB3cml0ZSBmdW5jdGlvbnMgdGhhdCBoYW5kbGUgYXN5bmNocm9ub3VzIGFjdGlvbnMuIFdlIHdyYXAgb3VyIGFzeW5jaHJvbm91cyBsb2dpYyBpbnNpZGUgYSBmdW5jdGlvbiBwcmVwZW5kZWQgd2l0aCB0aGUgYXN5bmMga2V5d29yZC4gVGhlbiwgd2UgaW52b2tlIHRoYXQgZnVuY3Rpb24uYCksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicHJlIn0se30pLGBhc3luYyBmdW5jdGlvbiBteUZ1bmMoKSB7CiAgLy8gRnVuY3Rpb24gYm9keSBoZXJlCn07CgpteUZ1bmMoKTsKYCkpLG1keCgicCIsbnVsbCxgV2XigJlsbCBiZSB1c2luZyBhc3luYyBmdW5jdGlvbiBkZWNsYXJhdGlvbnMgdGhyb3VnaG91dCB0aGlzIGxlc3NvbiwgYnV0IHdlIGNhbiBhbHNvIGNyZWF0ZSBhc3luYyBmdW5jdGlvbiBleHByZXNzaW9uc2ApLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHt9KSxgY29uc3QgbXlGdW5jID0gYXN5bmMgKCkgPT4gewogIC8vIEZ1bmN0aW9uIGJvZHkgaGVyZQp9OwoKbXlGdW5jKCk7CmApKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwcmUifSx7fSksYGFzeW5jIGZ1bmN0aW9uIGZpdmVQcm9taXNlKCkgeyAKICByZXR1cm4gNTsKfQoKZml2ZVByb21pc2UoKQoudGhlbihyZXNvbHZlZFZhbHVlID0+IHsKICAgIGNvbnNvbGUubG9nKHJlc29sdmVkVmFsdWUpOwogIH0pICAvLyBQcmludHMgNQpgKSkpO307TURYQ29udGVudC5pc01EWENvbXBvbmVudD10cnVlOw=="},{"version":3,"sources":["/Users/jack/Documents/GitHub/Docs/docs/js/adva/async-await.md"],"names":["React","mdx","frontMatter","metadata","rightToc","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"wGACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CAEA,MAAO,MAAMC,CAAAA,WAAW,CAAG,EAApB,CACT,MAAO,MAAMC,CAAAA,QAAQ,CAAG,CACtB,KAAM,qBADgB,CAEtB,QAAS,aAFa,CAGtB,cAAe,6aAHO,CAItB,SAAU,mCAJY,CAKtB,YAAa,2BALS,CAAjB,CAOL,cAEF,MAAO,MAAMC,CAAAA,QAAQ,CAAG,EAAjB,CACP,KAAMC,CAAAA,aAAa,CAAGC,IAAI,EAAI,QAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHD,CAKA,KAAMG,CAAAA,WAAW,CAAG,CAClBP,QADkB,CAApB,CAGA,KAAMQ,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,CAAoB,CACjCC,UADiC,CAEjC,GAAGN,KAF8B,CAApB,CAGZ,CACD,MAAO,KAAC,SAAD,aAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GAEL,aAAK,6aAAL,CAFK,CAGL,aAAK,qIAAL,CAHK,CAIL,SAAQ,CACN,KAAM,mBADA,CAAR,CAEK,mBAFL,CAJK,CAOL,aAAK,kMAAL,CAPK,CAQL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,EAAiC;;;;;CAAjC,CAAL,CARK,CAcL,aAAK,sHAAL,CAdK,CAeL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,EAAiC;;;;;CAAjC,CAAL,CAfK,CAqBL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,EAAiC;;;;;;;;CAAjC,CAAL,CArBK,CAAP,CA+BD,CAED,CACAD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {};\nexport const metadata = {\n  \"id\": \"js/adva/async-await\",\n  \"title\": \"async-await\",\n  \"description\": \"Often in web development, we need to handle asynchronous actions— actions we can wait on while moving on to other tasks. We make requests to networks, databases, or any number of similar operations. JavaScript is non-blocking: instead of stopping the execution of code while it waits, JavaScript uses an event-loop which allows it to efficiently execute other tasks while it awaits the completion of these asynchronous actions.\",\n  \"source\": \"@site/docs/js/adva/async-await.md\",\n  \"permalink\": \"/docs/js/adva/async-await\"\n};\n  /* @jsx mdx */\n\nexport const rightToc = [];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`Often in web development, we need to handle asynchronous actions— actions we can wait on while moving on to other tasks. We make requests to networks, databases, or any number of similar operations. JavaScript is non-blocking: instead of stopping the execution of code while it waits, JavaScript uses an event-loop which allows it to efficiently execute other tasks while it awaits the completion of these asynchronous actions.`}</p>\n    <p>{`The async...await syntax allows us to write asynchronous code that reads similarly to traditional synchronous, imperative programs.`}</p>\n    <h1 {...{\n      \"id\": \"the-async-keyword\"\n    }}>{`The async Keyword`}</h1>\n    <p>{`The async keyword is used to write functions that handle asynchronous actions. We wrap our asynchronous logic inside a function prepended with the async keyword. Then, we invoke that function.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`async function myFunc() {\n  // Function body here\n};\n\nmyFunc();\n`}</code></pre>\n    <p>{`We’ll be using async function declarations throughout this lesson, but we can also create async function expressions`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`const myFunc = async () => {\n  // Function body here\n};\n\nmyFunc();\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{}}>{`async function fivePromise() { \n  return 5;\n}\n\nfivePromise()\n.then(resolvedValue => {\n    console.log(resolvedValue);\n  })  // Prints 5\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}