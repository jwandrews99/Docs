{"remainingRequest":"C:\\Users\\japot\\OneDrive\\Desktop\\Discite\\site\\Docs\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!C:\\Users\\japot\\OneDrive\\Desktop\\Discite\\site\\Docs\\node_modules\\@docusaurus\\core\\lib\\client\\preload.js","dependencies":[{"path":"C:\\Users\\japot\\OneDrive\\Desktop\\Discite\\site\\Docs\\node_modules\\@docusaurus\\core\\lib\\client\\preload.js","mtime":1585404406762},{"path":"C:\\Users\\japot\\OneDrive\\Desktop\\Discite\\site\\Docs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1585404408908},{"path":"C:\\Users\\japot\\OneDrive\\Desktop\\Discite\\site\\Docs\\node_modules\\babel-loader\\lib\\index.js","mtime":1585404408509}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLml0ZXJhYmxlIjsvKioNCiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLg0KICoNCiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZQ0KICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLg0KICovaW1wb3J0e21hdGNoUm91dGVzfWZyb20ncmVhY3Qtcm91dGVyLWNvbmZpZyc7LyoqDQogKiBIZWxwZXIgZnVuY3Rpb24gdG8gbWFrZSBzdXJlIGFsbCBhc3luYyBjb21wb25lbnRzIGZvciB0aGF0IHBhcnRpY3VsYXIgcm91dGUNCiAqIGlzIHByZWxvYWRlZCBiZWZvcmUgcmVuZGVyaW5nLiBUaGlzIGlzIGVzcGVjaWFsbHkgdXNlZnVsIHRvIGF2b2lkIGxvYWRpbmcgc2NyZWVucy4NCiAqDQogKiBAcGFyYW0ge0FycmF5PFJvdXRlQ29uZmlnPn0gcm91dGVzIHJlYWN0LXJvdXRlci1jb25maWcNCiAqIEBwYXJhbSB7c3RyaW5nfSBwYXRobmFtZSB0aGUgcm91dGUgcGF0aG5hbWUsIGV4YW1wbGU6IC9kb2NzL2luc3RhbGxhdGlvbg0KICogQHJldHVybnMge1Byb21pc2V9IFByb21pc2Ugb2JqZWN0IHJlcHJlc2VudHMgd2hldGhlciBwYXRobmFtZSBoYXMgYmVlbiBwcmVsb2FkZWQNCiAqL2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHByZWxvYWQocm91dGVzLHBhdGhuYW1lKXtjb25zdCBtYXRjaGVzPW1hdGNoUm91dGVzKHJvdXRlcyxwYXRobmFtZSk7cmV0dXJuIFByb21pc2UuYWxsKG1hdGNoZXMubWFwKG1hdGNoPT57Y29uc3R7Y29tcG9uZW50fT1tYXRjaC5yb3V0ZTtpZihjb21wb25lbnQmJmNvbXBvbmVudC5wcmVsb2FkKXtyZXR1cm4gY29tcG9uZW50LnByZWxvYWQoKTt9cmV0dXJuIHVuZGVmaW5lZDt9KSk7fQ=="},{"version":3,"sources":["C:/Users/japot/OneDrive/Desktop/Discite/site/Docs/node_modules/@docusaurus/core/lib/client/preload.js"],"names":["matchRoutes","preload","routes","pathname","matches","Promise","all","map","match","component","route","undefined"],"mappings":"yCAAA;;;;;GAOA,OAAQA,WAAR,KAA0B,qBAA1B,CAEA;;;;;;;GAQA,cAAe,SAASC,CAAAA,OAAT,CAAiBC,MAAjB,CAAyBC,QAAzB,CAAmC,CAChD,KAAMC,CAAAA,OAAO,CAAGJ,WAAW,CAACE,MAAD,CAASC,QAAT,CAA3B,CAEA,MAAOE,CAAAA,OAAO,CAACC,GAAR,CACLF,OAAO,CAACG,GAAR,CAAYC,KAAK,EAAI,CACnB,KAAM,CAACC,SAAD,EAAcD,KAAK,CAACE,KAA1B,CAEA,GAAID,SAAS,EAAIA,SAAS,CAACR,OAA3B,CAAoC,CAClC,MAAOQ,CAAAA,SAAS,CAACR,OAAV,EAAP,CACD,CAED,MAAOU,CAAAA,SAAP,CACD,CARD,CADK,CAAP,CAWD","sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport {matchRoutes} from 'react-router-config';\r\n\r\n/**\r\n * Helper function to make sure all async components for that particular route\r\n * is preloaded before rendering. This is especially useful to avoid loading screens.\r\n *\r\n * @param {Array<RouteConfig>} routes react-router-config\r\n * @param {string} pathname the route pathname, example: /docs/installation\r\n * @returns {Promise} Promise object represents whether pathname has been preloaded\r\n */\r\nexport default function preload(routes, pathname) {\r\n  const matches = matchRoutes(routes, pathname);\r\n\r\n  return Promise.all(\r\n    matches.map(match => {\r\n      const {component} = match.route;\r\n\r\n      if (component && component.preload) {\r\n        return component.preload();\r\n      }\r\n\r\n      return undefined;\r\n    }),\r\n  );\r\n}\r\n"]}]}