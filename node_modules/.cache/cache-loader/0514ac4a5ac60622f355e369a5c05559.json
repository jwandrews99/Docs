{"remainingRequest":"C:\\Users\\japot\\OneDrive\\Desktop\\Discite\\site\\Docs\\node_modules\\babel-loader\\lib\\index.js??ref--7-1!C:\\Users\\japot\\OneDrive\\Desktop\\Discite\\site\\Docs\\node_modules\\@docusaurus\\mdx-loader\\src\\index.js??ref--7-2!C:\\Users\\japot\\OneDrive\\Desktop\\Discite\\site\\Docs\\node_modules\\@docusaurus\\plugin-content-docs\\lib\\markdown\\index.js??ref--7-3!C:\\Users\\japot\\OneDrive\\Desktop\\Discite\\site\\Docs\\docs\\gulp\\gulp.md","dependencies":[{"path":"C:\\Users\\japot\\OneDrive\\Desktop\\Discite\\site\\Docs\\docs\\gulp\\gulp.md","mtime":1585309205468},{"path":"C:\\Users\\japot\\OneDrive\\Desktop\\Discite\\site\\Docs\\.docusaurus\\docusaurus-plugin-content-docs\\site-docs-gulp-gulp-md-f1f.json","mtime":1585324802107},{"path":"C:\\Users\\japot\\OneDrive\\Desktop\\Discite\\site\\Docs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\japot\\OneDrive\\Desktop\\Discite\\site\\Docs\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\japot\\OneDrive\\Desktop\\Discite\\site\\Docs\\node_modules\\@docusaurus\\mdx-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\japot\\OneDrive\\Desktop\\Discite\\site\\Docs\\node_modules\\@docusaurus\\plugin-content-docs\\lib\\markdown\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iQzpcXFVzZXJzXFxqYXBvdFxcT25lRHJpdmVcXERlc2t0b3BcXERpc2NpdGVcXHNpdGVcXERvY3NcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMiO2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7ZXhwb3J0IGNvbnN0IGZyb250TWF0dGVyPXtpZDonZ3VscCcsdGl0bGU6J1VzaW5nIEd1bHAuanMgdG8gYXV0b21hdGUnfTtleHBvcnQgY29uc3QgbWV0YWRhdGE9eyJpZCI6Imd1bHAvZ3VscCIsInRpdGxlIjoiVXNpbmcgR3VscC5qcyB0byBhdXRvbWF0ZSIsImRlc2NyaXB0aW9uIjoiIyBXaHkgZG9lcyB0aGlzIGhlbHBcciIsInNvdXJjZSI6IkBzaXRlL2RvY3NcXGd1bHBcXGd1bHAubWQiLCJwZXJtYWxpbmsiOiIvZG9jcy9ndWxwL2d1bHAiLCJzaWRlYmFyIjoic29tZVNpZGViYXIiLCJwcmV2aW91cyI6eyJ0aXRsZSI6IlBvd2VyZWQgYnkgTURYIiwicGVybWFsaW5rIjoiL2RvY3MvbWR4In0sIm5leHQiOnsidGl0bGUiOiJGdW5kYW1lbnRhbHMgb2YgSFRNTCIsInBlcm1hbGluayI6Ii9kb2NzL2h0bWwvaHRtbC1mdW5kIn19Oy8qIEBqc3ggbWR4ICovZXhwb3J0IGNvbnN0IHJpZ2h0VG9jPVt7dmFsdWU6J0V4YW1wbGUnLGlkOidleGFtcGxlJyxjaGlsZHJlbjpbXX1dO2NvbnN0IG1ha2VTaG9ydGNvZGU9bmFtZT0+ZnVuY3Rpb24gTURYRGVmYXVsdFNob3J0Y29kZShwcm9wcyl7Y29uc29sZS53YXJuKCJDb21wb25lbnQgIituYW1lKyIgd2FzIG5vdCBpbXBvcnRlZCwgZXhwb3J0ZWQsIG9yIHByb3ZpZGVkIGJ5IE1EWFByb3ZpZGVyIGFzIGdsb2JhbCBzY29wZSIpO3JldHVybiBtZHgoImRpdiIscHJvcHMpO307Y29uc3QgbGF5b3V0UHJvcHM9e3JpZ2h0VG9jfTtjb25zdCBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoe2NvbXBvbmVudHMsLi4ucHJvcHN9KXtyZXR1cm4gbWR4KE1EWExheW91dCxfZXh0ZW5kcyh7fSxsYXlvdXRQcm9wcyxwcm9wcyx7Y29tcG9uZW50czpjb21wb25lbnRzLG1keFR5cGU6Ik1EWExheW91dCJ9KSxtZHgoImgxIix7ImlkIjoid2h5LWRvZXMtdGhpcy1oZWxwIn0sYFdoeSBkb2VzIHRoaXMgaGVscGApLG1keCgicCIsbnVsbCxgVGhpcyBhYmxlcyB5b3UgdG8gc3BsaXQgeW91ciBjb2RlIHVwIGFuZCBvcmdhbmlzZSBpbiBzYXNzIGFuZCBhdXRvbWF0aWNhbGx5IGNvbXBpbGUgaXQgdG8gY3NzLiBgKSxtZHgoInAiLG51bGwsYE9uIHRvcCBvZiB0aGF0IGlzIG1pbmlmaWVzIHlvdXIgY3NzIGlmIHlvdSBhcmUgaG9zdGluZyBpdCBvbiBhIHNlcnZlciB0byBpbmNyZWFzZSBzcGVlZHMgYW5kIGxvYWRpbmcgdGltZXNgKSxtZHgoImgxIix7ImlkIjoiaW5zdGFsbGF0aW9uIn0sYEluc3RhbGxhdGlvbmApLG1keCgicCIsbnVsbCxgTmVlZHMgbm9kZUpTIHRvIHdvcmsgYXMgaXQgdXNlcyBucG0gaW5zdGFsbGApLG1keCgicCIsbnVsbCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sYG5wbSBpbnN0YWxsIGd1bHAtY2xpIC1nYCksYApgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSxgbnBtIGluc3RhbGwgZ3VscCAtRGApLGAKYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sYHRvdWNoIGd1bHBmaWxlLmpzYCksYApgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSxgZ3VscCAtLWhlbHBgKSksbWR4KCJoMSIseyJpZCI6InByb2plY3Qtc2V0LXVwIn0sYFByb2plY3Qgc2V0IHVwYCksbWR4KCJwIixudWxsLGBDcmVhdGUgYSBmb2xkZXJgKSxtZHgoInAiLG51bGwsYFJ1biBucG0gaW5pdCB0byBjcmVhdGUgYSBwYWNrYWdlLmpzb25gKSxtZHgoInAiLG51bGwsYEluc3RhbGwgZ3VscCBhcyBhIGRlcGVuZGVuY3kgdG8gdGhlIHByb2plY3QgYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sYG5wbSBpc250YWxsIGd1bHAgLURgKSksbWR4KCJwIixudWxsLGB1c2UgdGhlIGNvbW1hbmQgYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sYHRvdWNoIGd1bHBmaWxlLmpzYCksYCAvLyBjcmVhdGVzIGEgZmlsZSBpbiB0aGUgcHJvamVjdCBmb2xkZXIgYCksbWR4KCJwIixudWxsLGB1c2UgbnBtIGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LGAgbnBtIGluc3RhbGwgLS1zYXZlIGd1bHAtc2Fzc2ApLGAgLy8gVGhpcyBjb252ZXJ0cyB5b3VyIHNhc3MgdG8gY3NzYCksbWR4KCJwIixudWxsLGB1c2UgbnBtIGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LGBucG0gaW5zdGFsbCAtLXNhdmUgZ3VscC11Z2xpZnljc3NgKSksbWR4KCJoMSIseyJpZCI6Imd1bHAtY29tbWFuZHMifSxgR3VscCBjb21tYW5kc2ApLG1keCgicCIsbnVsbCxgVXNlIGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LGBndWxwIHNhc3NgKSxgIGluIHRoZSBjb21tYW5kIGxpbmUgdG8gY29udmVydCBzYXNzIHRvIGNzc2ApLG1keCgicCIsbnVsbCxgdXNlIGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LGAgZ3VscCBjc3NgKSxgIGluIHRoZSBjb21tYW5kIGxpbmUgdG8gbWluaWZ5IHlvdXIgY3NzIGludG8gb25lIGxpbmUgb2YgY29kZS5gKSxtZHgoImgyIix7ImlkIjoiZXhhbXBsZSJ9LGBFeGFtcGxlYCksbWR4KCJwIixudWxsLGBUaGUgZm9sbG93aW5nIGV4YW1wbGUgc2hvd3MgaG93IHlvdSBjYW4gbWluaW5pZnkgeW91ciBzYXNzIGZpbGVzLCBpbiBvcmRlciB0byByZWR1Y2UgdGhlIHNpemUuCkJ5IHJlZHVjaW5nIHRoZSBzaXplIG9mIHlvdXIgY3NzIC8gc2FzcyBmaWxlLCBpdCBhbHNvIHJlZHVjZXMgc2VydmVyIGxvYWQgdGltZXMuYCksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicHJlIn0se30pLGBjb25zdCBndWxwID0gcmVxdWlyZSgnZ3VscCcpOwoKLy8gY29udmVydCBzYXNzIHRvIGEgY3NzIGZpbGUgCmNvbnN0IHNhc3MgPSByZXF1aXJlKCdndWxwLXNhc3MnKTsKCmd1bHAudGFzaygnc2FzcycsIGZ1bmN0aW9uKCkgewogICAgcmV0dXJuIGd1bHAuc3JjKCcuL3Nhc3MvKi5zY3NzJykgLy8gV2lsZGNhbGQgdG8gY29tcGlsZSB0aGUgd2hvbGUgZm9sZGVyCiAgICAucGlwZShzYXNzKCkub24oJ2Vycm9yJywgc2Fzcy5sb2dFcnJvcikpCiAgICAucGlwZShndWxwLmRlc3QoJy4vY3NzJykpOwp9KTsKCi8vIE1pbmltaXNlIHlvdXIgY3NzIGZpbGVzCmNvbnN0IHVnbGlmeWNzcyA9IHJlcXVpcmUoJ2d1bHAtdWdsaWZ5Y3NzJyk7CiAKZ3VscC50YXNrKCdjc3MnLCBmdW5jdGlvbiAoKSB7CiAgZ3VscC5zcmMoJy4vc3R5bGVzLyouY3NzJykKICAgIC5waXBlKHVnbGlmeWNzcyh7CiAgICAgICJtYXhMaW5lTGVuIjogODAsIC8vIEFmdGVyIGV2ZXJ5ICogY2hhcmFjdGVycyBhZGQgYSBuZXcgbGluZQogICAgICAidWdseUNvbW1lbnRzIjogdHJ1ZQogICAgfSkpCiAgICAucGlwZShndWxwLmRlc3QoJy4vZGlzdC8nKSk7Cn0pOwoKLy8gYXV0b21hdGljIGNobmFnZXMgYW5kIGJ1aWxkcyBpbiBndWxwCgpndWxwLnRhc2soJ3J1bicsIFsnc2FzcycsICdjc3MnXSk7CgovLyBhdXRvbWF0aWNhbGx5IHdhdGNoZXMgZm9yIGNoYW5nZXMgaW4gdGhlc2UgZm9sZGVycyAKZ3VscC50YXNrKCd3YXRjaCcsIGZ1bmN0aW9uKCkgewogICAgZ3VscC53YXRjaCgnLi9zYXNzLyouc2FzcycsIFsnc2FzcyddKTsKICAgIGd1bHAud2F0Y2goJy4vY3NzLyouY3NzJywgWydjc3MnXSk7Cn0pOwoKLy8gZGVmYXVsdCB0YXNrIHRvIGF1dG9tYXRpY2FsbHkgYnVpbGQgYWZ0ZXIgY2hhbmdlcyBtYWRlIHRvIGZpbGVzCgpndWxwLnRhc2soJ2RlZmF1bHQnLCBbJ3J1bicsICd3YXRjaCddKTsKYCkpKTt9O01EWENvbnRlbnQuaXNNRFhDb21wb25lbnQ9dHJ1ZTs="},{"version":3,"sources":["C:/Users/japot/OneDrive/Desktop/Discite/site/Docs/docs/gulp/gulp.md"],"names":["React","mdx","frontMatter","id","title","metadata","rightToc","value","children","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tid: 'gulp',\n\ttitle: 'Using Gulp.js to automate'\n};\nexport const metadata = {\n  \"id\": \"gulp/gulp\",\n  \"title\": \"Using Gulp.js to automate\",\n  \"description\": \"# Why does this help\\r\",\n  \"source\": \"@site/docs\\\\gulp\\\\gulp.md\",\n  \"permalink\": \"/docs/gulp/gulp\",\n  \"sidebar\": \"someSidebar\",\n  \"previous\": {\n    \"title\": \"Powered by MDX\",\n    \"permalink\": \"/docs/mdx\"\n  },\n  \"next\": {\n    \"title\": \"Fundamentals of HTML\",\n    \"permalink\": \"/docs/html/html-fund\"\n  }\n};\n  /* @jsx mdx */\n\nexport const rightToc = [{\n  value: 'Example',\n  id: 'example',\n  children: []\n}];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"why-does-this-help\"\n    }}>{`Why does this help`}</h1>\n    <p>{`This ables you to split your code up and organise in sass and automatically compile it to css. `}</p>\n    <p>{`On top of that is minifies your css if you are hosting it on a server to increase speeds and loading times`}</p>\n    <h1 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h1>\n    <p>{`Needs nodeJS to work as it uses npm install`}</p>\n    <p><inlineCode parentName=\"p\">{`npm install gulp-cli -g`}</inlineCode>{`\n`}<inlineCode parentName=\"p\">{`npm install gulp -D`}</inlineCode>{`\n`}<inlineCode parentName=\"p\">{`touch gulpfile.js`}</inlineCode>{`\n`}<inlineCode parentName=\"p\">{`gulp --help`}</inlineCode></p>\n    <h1 {...{\n      \"id\": \"project-set-up\"\n    }}>{`Project set up`}</h1>\n    <p>{`Create a folder`}</p>\n    <p>{`Run npm init to create a package.json`}</p>\n    <p>{`Install gulp as a dependency to the project `}<inlineCode parentName=\"p\">{`npm isntall gulp -D`}</inlineCode></p>\n    <p>{`use the command `}<inlineCode parentName=\"p\">{`touch gulpfile.js`}</inlineCode>{` // creates a file in the project folder `}</p>\n    <p>{`use npm `}<inlineCode parentName=\"p\">{` npm install --save gulp-sass`}</inlineCode>{` // This converts your sass to css`}</p>\n    <p>{`use npm `}<inlineCode parentName=\"p\">{`npm install --save gulp-uglifycss`}</inlineCode></p>\n    <h1 {...{\n      \"id\": \"gulp-commands\"\n    }}>{`Gulp commands`}</h1>\n    <p>{`Use `}<inlineCode parentName=\"p\">{`gulp sass`}</inlineCode>{` in the command line to convert sass to css`}</p>\n    <p>{`use `}<inlineCode parentName=\"p\">{` gulp css`}</inlineCode>{` in the command line to minify your css into one line of code.`}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <p>{`The following example shows how you can mininify your sass files, in order to reduce the size.\nBy reducing the size of your css / sass file, it also reduces server load times.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`const gulp = require('gulp');\n\n// convert sass to a css file \nconst sass = require('gulp-sass');\n\ngulp.task('sass', function() {\n    return gulp.src('./sass/*.scss') // Wildcald to compile the whole folder\n    .pipe(sass().on('error', sass.logError))\n    .pipe(gulp.dest('./css'));\n});\n\n// Minimise your css files\nconst uglifycss = require('gulp-uglifycss');\n \ngulp.task('css', function () {\n  gulp.src('./styles/*.css')\n    .pipe(uglifycss({\n      \"maxLineLen\": 80, // After every * characters add a new line\n      \"uglyComments\": true\n    }))\n    .pipe(gulp.dest('./dist/'));\n});\n\n// automatic chnages and builds in gulp\n\ngulp.task('run', ['sass', 'css']);\n\n// automatically watches for changes in these folders \ngulp.task('watch', function() {\n    gulp.watch('./sass/*.sass', ['sass']);\n    gulp.watch('./css/*.css', ['css']);\n});\n\n// default task to automatically build after changes made to files\n\ngulp.task('default', ['run', 'watch']);\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}