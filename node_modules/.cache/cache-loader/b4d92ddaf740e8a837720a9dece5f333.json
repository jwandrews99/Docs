{"remainingRequest":"/Users/jack/Documents/GitHub/Docs/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/jack/Documents/GitHub/Docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--7-2!/Users/jack/Documents/GitHub/Docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--7-3!/Users/jack/Documents/GitHub/Docs/docs/css/adva/flexbox.md","dependencies":[{"path":"/Users/jack/Documents/GitHub/Docs/docs/css/adva/flexbox.md","mtime":1585344082002},{"path":"/Users/jack/Documents/GitHub/Docs/.docusaurus/docusaurus-plugin-content-docs/site-docs-css-adva-flexbox-md-594.json","mtime":1585395212793},{"path":"/Users/jack/Documents/GitHub/Docs/node_modules/cache-loader/dist/cjs.js","mtime":1585256602861},{"path":"/Users/jack/Documents/GitHub/Docs/node_modules/babel-loader/lib/index.js","mtime":1585256602734},{"path":"/Users/jack/Documents/GitHub/Docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1585256621747},{"path":"/Users/jack/Documents/GitHub/Docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1585256618966}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}