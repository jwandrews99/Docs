{"remainingRequest":"/Users/jack/Documents/GitHub/Docs/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/jack/Documents/GitHub/Docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--7-2!/Users/jack/Documents/GitHub/Docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--7-3!/Users/jack/Documents/GitHub/Docs/docs/css/adva/media-queries.md","dependencies":[{"path":"/Users/jack/Documents/GitHub/Docs/docs/css/adva/media-queries.md","mtime":1585344082003},{"path":"/Users/jack/Documents/GitHub/Docs/.docusaurus/docusaurus-plugin-content-docs/site-docs-css-adva-media-queries-md-255.json","mtime":1585344343504},{"path":"/Users/jack/Documents/GitHub/Docs/node_modules/cache-loader/dist/cjs.js","mtime":1585256602861},{"path":"/Users/jack/Documents/GitHub/Docs/node_modules/babel-loader/lib/index.js","mtime":1585256602734},{"path":"/Users/jack/Documents/GitHub/Docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1585256621747},{"path":"/Users/jack/Documents/GitHub/Docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1585256618966}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL2phY2svRG9jdW1lbnRzL0dpdEh1Yi9Eb2NzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzIjtpbXBvcnQgUmVhY3QgZnJvbSdyZWFjdCc7aW1wb3J0e21keH1mcm9tJ0BtZHgtanMvcmVhY3QnO2V4cG9ydCBjb25zdCBmcm9udE1hdHRlcj17fTtleHBvcnQgY29uc3QgbWV0YWRhdGE9eyJpZCI6ImNzcy9hZHZhL21lZGlhLXF1ZXJpZXMiLCJ0aXRsZSI6Im1lZGlhLXF1ZXJpZXMiLCJkZXNjcmlwdGlvbiI6IiMgTWVkaWEgUXVlcmllcyIsInNvdXJjZSI6IkBzaXRlL2RvY3MvY3NzL2FkdmEvbWVkaWEtcXVlcmllcy5tZCIsInBlcm1hbGluayI6Ii9kb2NzL2Nzcy9hZHZhL21lZGlhLXF1ZXJpZXMifTsvKiBAanN4IG1keCAqL2V4cG9ydCBjb25zdCByaWdodFRvYz1bXTtjb25zdCBtYWtlU2hvcnRjb2RlPW5hbWU9PmZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O2NvbnN0IGxheW91dFByb3BzPXtyaWdodFRvY307Y29uc3QgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtjb21wb25lbnRzLC4uLnByb3BzfSl7cmV0dXJuIG1keChNRFhMYXlvdXQsX2V4dGVuZHMoe30sbGF5b3V0UHJvcHMscHJvcHMse2NvbXBvbmVudHM6Y29tcG9uZW50cyxtZHhUeXBlOiJNRFhMYXlvdXQifSksbWR4KCJoMSIseyJpZCI6Im1lZGlhLXF1ZXJpZXMifSxgTWVkaWEgUXVlcmllc2ApLG1keCgicCIsbnVsbCxgQ1NTIHVzZXMgbWVkaWEgcXVlcmllcyB0byBhZGFwdCBhIHdlYnNpdGXigJlzIGNvbnRlbnQgdG8gZGlmZmVyZW50IHNjcmVlbiBzaXplcy4gV2l0aCBtZWRpYSBxdWVyaWVzLCBDU1MgY2FuIGRldGVjdCB0aGUgc2l6ZSBvZiB0aGUgY3VycmVudCBzY3JlZW4gYW5kIGFwcGx5IGRpZmZlcmVudCBDU1Mgc3R5bGVzIGRlcGVuZGluZyBvbiB0aGUgd2lkdGggb2YgdGhlIHNjcmVlbi5cXGApLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtdGV4dCJ9KSxgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCkgewogIGJvZHkgewogICAgZm9udC1zaXplOiAxMnB4OwogIH0KfQpgKSksbWR4KCJwIixudWxsLGBSYW5nZSBjYW4gYWxzbyBiZSBpbmNsdWRlZCAtIGAsYChgLGBtaW4td2lkdGg6IDMyMHB4YCxgKWAsYCBhbmQgYCxgKGAsYG1heC13aWR0aDogNDgwcHhgLGApYCxgIGNvbWUgYWZ0ZXIgJ29ubHkgc2NyZWVuIGFuZCcgYW5kIHJlcGxhY2UgdGhlIG9yaWdpbmFsIG1heCB3aWR0aC4gVGhpcyBhbGxvd3MgdGhlIENTUyB0byBpbmNsdWRlIHRoZSBydWxlIHNldCBmb3IgZGV2aWNlcyBhbmQgc2NyZWVucyBpbiB0aGlzIHJhbmdlLmApLG1keCgicCIsbnVsbCxgSW5zdGVhZCBvZiB3aWR0aCB5b3UgY2FuIHVzZSBEUEkgYCxgKGAsYERvdHMgcGVyIGluY2hgLGApYCksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS10ZXh0In0pLGBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4tcmVzb2x1dGlvbjogMzAwZHBpKSB7CiAgICAvKiBDU1MgZm9yIGhpZ2ggcmVzb2x1dGlvbiBzY3JlZW5zICovCn0KYCkpKTt9O01EWENvbnRlbnQuaXNNRFhDb21wb25lbnQ9dHJ1ZTs="},{"version":3,"sources":["/Users/jack/Documents/GitHub/Docs/docs/css/adva/media-queries.md"],"names":["React","mdx","frontMatter","metadata","rightToc","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"wGACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CAEA,MAAO,MAAMC,CAAAA,WAAW,CAAG,EAApB,CACT,MAAO,MAAMC,CAAAA,QAAQ,CAAG,CACtB,KAAM,wBADgB,CAEtB,QAAS,eAFa,CAGtB,cAAe,iBAHO,CAItB,SAAU,sCAJY,CAKtB,YAAa,8BALS,CAAjB,CAOL,cAEF,MAAO,MAAMC,CAAAA,QAAQ,CAAG,EAAjB,CACP,KAAMC,CAAAA,aAAa,CAAGC,IAAI,EAAI,QAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHD,CAKA,KAAMG,CAAAA,WAAW,CAAG,CAClBP,QADkB,CAApB,CAGA,KAAMQ,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,CAAoB,CACjCC,UADiC,CAEjC,GAAGN,KAF8B,CAApB,CAGZ,CACD,MAAO,KAAC,SAAD,aAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GAEL,SAAQ,CACN,KAAM,eADA,CAAR,CAEK,eAFL,CAFK,CAKL,aAAK,yNAAL,CALK,CAML,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADe,CAA3B,EAEE;;;;;CAFF,CAAL,CANK,CAcL,aAAK,+BAAL,CAAsC,GAAtC,CAA2C,kBAA3C,CAA+D,GAA/D,CAAoE,OAApE,CAA6E,GAA7E,CAAkF,kBAAlF,CAAsG,GAAtG,CAA2G,sJAA3G,CAdK,CAeL,aAAK,mCAAL,CAA0C,GAA1C,CAA+C,eAA/C,CAAgE,GAAhE,CAfK,CAgBL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADe,CAA3B,EAEE;;;CAFF,CAAL,CAhBK,CAAP,CAuBD,CAED,CACAD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {};\nexport const metadata = {\n  \"id\": \"css/adva/media-queries\",\n  \"title\": \"media-queries\",\n  \"description\": \"# Media Queries\",\n  \"source\": \"@site/docs/css/adva/media-queries.md\",\n  \"permalink\": \"/docs/css/adva/media-queries\"\n};\n  /* @jsx mdx */\n\nexport const rightToc = [];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"media-queries\"\n    }}>{`Media Queries`}</h1>\n    <p>{`CSS uses media queries to adapt a websiteâ€™s content to different screen sizes. With media queries, CSS can detect the size of the current screen and apply different CSS styles depending on the width of the screen.\\\\`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`@media only screen and (max-width: 480px) {\n  body {\n    font-size: 12px;\n  }\n}\n`}</code></pre>\n    <p>{`Range can also be included - `}{`(`}{`min-width: 320px`}{`)`}{` and `}{`(`}{`max-width: 480px`}{`)`}{` come after 'only screen and' and replace the original max width. This allows the CSS to include the rule set for devices and screens in this range.`}</p>\n    <p>{`Instead of width you can use DPI `}{`(`}{`Dots per inch`}{`)`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`@media only screen and (min-resolution: 300dpi) {\n    /* CSS for high resolution screens */\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}