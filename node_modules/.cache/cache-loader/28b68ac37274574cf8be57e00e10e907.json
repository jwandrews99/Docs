{"remainingRequest":"/Users/jack/Documents/GitHub/Docs/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/jack/Documents/GitHub/Docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--7-2!/Users/jack/Documents/GitHub/Docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--7-3!/Users/jack/Documents/GitHub/Docs/docs/js/adva/callbacks.md","dependencies":[{"path":"/Users/jack/Documents/GitHub/Docs/docs/js/adva/callbacks.md","mtime":1585344082006},{"path":"/Users/jack/Documents/GitHub/Docs/.docusaurus/docusaurus-plugin-content-docs/site-docs-js-adva-callbacks-md-f36.json","mtime":1585344343504},{"path":"/Users/jack/Documents/GitHub/Docs/node_modules/cache-loader/dist/cjs.js","mtime":1585256602861},{"path":"/Users/jack/Documents/GitHub/Docs/node_modules/babel-loader/lib/index.js","mtime":1585256602734},{"path":"/Users/jack/Documents/GitHub/Docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1585256621747},{"path":"/Users/jack/Documents/GitHub/Docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1585256618966}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL2phY2svRG9jdW1lbnRzL0dpdEh1Yi9Eb2NzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzIjtpbXBvcnQgUmVhY3QgZnJvbSdyZWFjdCc7aW1wb3J0e21keH1mcm9tJ0BtZHgtanMvcmVhY3QnO2V4cG9ydCBjb25zdCBmcm9udE1hdHRlcj17fTtleHBvcnQgY29uc3QgbWV0YWRhdGE9eyJpZCI6ImpzL2FkdmEvY2FsbGJhY2tzIiwidGl0bGUiOiJjYWxsYmFja3MiLCJkZXNjcmlwdGlvbiI6IiMgQ2FsbCBCYWNrcyBpbiBKYXZhc2NyaXB0IGFuZCB3aHkgeW91IG5lZWQgdGhlbSAgIiwic291cmNlIjoiQHNpdGUvZG9jcy9qcy9hZHZhL2NhbGxiYWNrcy5tZCIsInBlcm1hbGluayI6Ii9kb2NzL2pzL2FkdmEvY2FsbGJhY2tzIn07LyogQGpzeCBtZHggKi9leHBvcnQgY29uc3QgcmlnaHRUb2M9W107Y29uc3QgbWFrZVNob3J0Y29kZT1uYW1lPT5mdW5jdGlvbiBNRFhEZWZhdWx0U2hvcnRjb2RlKHByb3BzKXtjb25zb2xlLndhcm4oIkNvbXBvbmVudCAiK25hbWUrIiB3YXMgbm90IGltcG9ydGVkLCBleHBvcnRlZCwgb3IgcHJvdmlkZWQgYnkgTURYUHJvdmlkZXIgYXMgZ2xvYmFsIHNjb3BlIik7cmV0dXJuIG1keCgiZGl2Iixwcm9wcyk7fTtjb25zdCBsYXlvdXRQcm9wcz17cmlnaHRUb2N9O2NvbnN0IE1EWExheW91dD0id3JhcHBlciI7ZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7Y29tcG9uZW50cywuLi5wcm9wc30pe3JldHVybiBtZHgoTURYTGF5b3V0LF9leHRlbmRzKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaDEiLHsiaWQiOiJjYWxsLWJhY2tzLWluLWphdmFzY3JpcHQtYW5kLXdoeS15b3UtbmVlZC10aGVtIn0sYENhbGwgQmFja3MgaW4gSmF2YXNjcmlwdCBhbmQgd2h5IHlvdSBuZWVkIHRoZW1gKSxtZHgoImgxIix7ImlkIjoid2hhdC1pcy1hLWNhbGxiYWNrIn0sYFdoYXQgaXMgYSBjYWxsYmFja2ApLG1keCgicCIsbnVsbCxgQSBjYWxsYmFjayBpcyBhIGZ1bmN0aW9uIHRoYXQgaXMgdG8gYmUgZXhlY3V0ZWQgYWZ0ZXIgYW5vdGhlciBmdW5jdGlvbiBoYXMgZmluaXNoZWQgZXhlY3V0aW5n4oCK4oCU4oCKaGVuY2UgdGhlIG5hbWUg4oCYY2FsbCBiYWNr4oCZLmApLG1keCgiaDEiLHsiaWQiOiJ3aHktZG8td2UtbmVlZC10aGVtIn0sYFdoeSBkbyB3ZSBuZWVkIHRoZW1gKSxtZHgoInAiLG51bGwsYEZvciBvbmUgdmVyeSBpbXBvcnRhbnQgcmVhc29u4oCK4oCU4oCKSmF2YVNjcmlwdCBpcyBhbiBldmVudCBkcml2ZW4gbGFuZ3VhZ2UuIFxcClRoaXMgbWVhbnMgdGhhdCBpbnN0ZWFkIG9mIHdhaXRpbmcgZm9yIGEgcmVzcG9uc2UgYmVmb3JlIG1vdmluZyBvbiwgSmF2YVNjcmlwdCB3aWxsIGtlZXAgZXhlY3V0aW5nIHdoaWxlIGxpc3RlbmluZyBmb3Igb3RoZXIgZXZlbnRzLiBgKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwcmUifSx7fSksYGZ1bmN0aW9uIGZpcnN0KCl7CiAgY29uc29sZS5sb2coMSk7Cn0KZnVuY3Rpb24gc2Vjb25kKCl7CiAgY29uc29sZS5sb2coMik7Cn0KZmlyc3QoKTsKc2Vjb25kKCk7CmApKSxtZHgoInAiLG51bGwsYEFzIHlvdSB3b3VsZCBleHBlY3QsIFxcCnRoZSBmdW5jdGlvbiBmaXJzdCBpcyBleGVjdXRlZCBmaXJzdCwgYW5kIHRoZSBmdW5jdGlvbiBzZWNvbmQgaXMgZXhlY3V0ZWQgc2Vjb25k4oCK4oCU4oCKbG9nZ2luZyB0aGUgZm9sbG93aW5nIHRvIHRoZSBjb25zb2xlOmApLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHt9KSxgLy8gMQovLyAyCmApKSxtZHgoInAiLG51bGwsYCBDYWxsYmFja3MgYXJlIGEgd2F5IHRvIG1ha2Ugc3VyZSBjZXJ0YWluIGNvZGUgZG9lc27igJl0IGV4ZWN1dGUgdW50aWwgb3RoZXIgY29kZSBoYXMgYWxyZWFkeSBmaW5pc2hlZCBleGVjdXRpb24uYCksbWR4KCJoMSIseyJpZCI6ImNyZWF0aW5nLWEtY2FsbGJhY2sifSxgQ3JlYXRpbmcgYSBjYWxsYmFja2ApLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHt9KSxgZnVuY3Rpb24gZG9Ib21ld29yayhzdWJqZWN0KSB7CiBhbGVydChcYFN0YXJ0aW5nIG15IFwke3N1YmplY3R9IGhvbWV3b3JrLlxgKTsKfQpgKSksbWR4KCJwIixudWxsLGAgQWJvdmUsIHdl4oCZdmUgY3JlYXRlZCB0aGUgZnVuY3Rpb24gZG9Ib21ld29yayAuIE91ciBmdW5jdGlvbiB0YWtlcyBvbmUgdmFyaWFibGUsIFxcCnRoZSBzdWJqZWN0IHRoYXQgd2UgYXJlIHdvcmtpbmcgb24uIENhbGwgeW91ciBmdW5jdGlvbiBieSB0eXBpbmcgdGhlIGZvbGxvd2luZyBpbnRvIHlvdXIgY29uc29sZTpgKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwcmUifSx7fSksYGRvSG9tZXdvcmsoJ21hdGgnKTsKLy8gQWxlcnRzOiBTdGFydGluZyBteSBtYXRoIGhvbWV3b3JrLgpgKSksbWR4KCJwIixudWxsLGAgTm93IGxldHMgYWRkIGluIG91ciBjYWxsYmFja+KAiuKAlOKAimFzIG91ciBsYXN0IHBhcmFtZXRlciBpbiB0aGUgZG9Ib21ld29yaygpIGZ1bmN0aW9uIHdlIGNhbiBwYXNzIGluIGNhbGxiYWNrLiBcXApUaGUgY2FsbGJhY2sgZnVuY3Rpb24gaXMgdGhlbiBkZWZpbmVkIGluIHRoZSBzZWNvbmQgYXJndW1lbnQgb2Ygb3VyIGNhbGwgdG8gZG9Ib21ld29yaygpLmApLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHt9KSxgZnVuY3Rpb24gZG9Ib21ld29yayhzdWJqZWN0LCBjYWxsYmFjaykgewogYWxlcnQoXGBTdGFydGluZyBteSBcJHtzdWJqZWN0fSBob21ld29yay5cYCk7CiBjYWxsYmFjaygpOwp9Cgpkb0hvbWV3b3JrKCdtYXRoJywgZnVuY3Rpb24oKSB7CiBhbGVydCgnRmluaXNoZWQgbXkgaG9tZXdvcmsnKTsKfSk7CmApKSxtZHgoInAiLG51bGwsYEFzIHlvdeKAmWxsIHNlZSwgaWYgeW91IHR5cGUgdGhlIGFib3ZlIGNvZGUgaW50byB5b3VyIGNvbnNvbGUgeW91IHdpbGwgZ2V0IHR3byBhbGVydHMgYmFjayB0byBiYWNrOiBZb3VyIOKAmHN0YXJ0aW5nIGhvbWV3b3Jr4oCZIGFsZXJ0LCBmb2xsb3dlZCBieSB5b3VyIOKAmGZpbmlzaGVkIGhvbWV3b3Jr4oCZIGFsZXJ0LmApLG1keCgicCIsbnVsbCxgQnV0IGNhbGxiYWNrIGZ1bmN0aW9ucyBkb27igJl0IGFsd2F5cyBoYXZlIHRvIGJlIGRlZmluZWQgaW4gb3VyIGZ1bmN0aW9uIGNhbGwuIFRoZXkgY2FuIGJlIGRlZmluZWQgZWxzZXdoZXJlIGluIG91ciBjb2RlIGxpa2UgdGhpczpgKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwcmUifSx7fSksYGZ1bmN0aW9uIGRvSG9tZXdvcmsoc3ViamVjdCwgY2FsbGJhY2spIHsKICBhbGVydChcYFN0YXJ0aW5nIG15IFwke3N1YmplY3R9IGhvbWV3b3JrLlxgKTsKICBjYWxsYmFjaygpOwp9CmZ1bmN0aW9uIGFsZXJ0RmluaXNoZWQoKXsKICBhbGVydCgnRmluaXNoZWQgbXkgaG9tZXdvcmsnKTsKfQpkb0hvbWV3b3JrKCdtYXRoJywgYWxlcnRGaW5pc2hlZCk7CmApKSxtZHgoInAiLG51bGwsYCBUaGlzIHJlc3VsdCBvZiB0aGlzIGV4YW1wbGUgaXMgZXhhY3RseSB0aGUgc2FtZSBhcyB0aGUgcHJldmlvdXMgZXhhbXBsZSwgYnV0IHRoZSBzZXR1cCBpcyBhIGxpdHRsZSBkaWZmZXJlbnQuIFxcCkFzIHlvdSBjYW4gc2VlLCB3ZeKAmXZlIHBhc3NlZCB0aGUgYWxlcnRGaW5pc2hlZCBmdW5jdGlvbiBkZWZpbml0aW9uIGFzIGFuIGFyZ3VtZW50IGR1cmluZyBvdXIgZG9Ib21ld29yaygpIGZ1bmN0aW9uIGNhbGwhYCkpO307TURYQ29udGVudC5pc01EWENvbXBvbmVudD10cnVlOw=="},{"version":3,"sources":["/Users/jack/Documents/GitHub/Docs/docs/js/adva/callbacks.md"],"names":["React","mdx","frontMatter","metadata","rightToc","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"wGACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CAEA,MAAO,MAAMC,CAAAA,WAAW,CAAG,EAApB,CACT,MAAO,MAAMC,CAAAA,QAAQ,CAAG,CACtB,KAAM,mBADgB,CAEtB,QAAS,WAFa,CAGtB,cAAe,oDAHO,CAItB,SAAU,iCAJY,CAKtB,YAAa,yBALS,CAAjB,CAOL,cAEF,MAAO,MAAMC,CAAAA,QAAQ,CAAG,EAAjB,CACP,KAAMC,CAAAA,aAAa,CAAGC,IAAI,EAAI,QAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHD,CAKA,KAAMG,CAAAA,WAAW,CAAG,CAClBP,QADkB,CAApB,CAGA,KAAMQ,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,CAAoB,CACjCC,UADiC,CAEjC,GAAGN,KAF8B,CAApB,CAGZ,CACD,MAAO,KAAC,SAAD,aAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GAEL,SAAQ,CACN,KAAM,gDADA,CAAR,CAEK,gDAFL,CAFK,CAKL,SAAQ,CACN,KAAM,oBADA,CAAR,CAEK,oBAFL,CALK,CAQL,aAAK,6HAAL,CARK,CASL,SAAQ,CACN,KAAM,qBADA,CAAR,CAEK,qBAFL,CATK,CAYL,aAAK;sIAAL,CAZK,CAcL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,EAAiC;;;;;;;;CAAjC,CAAL,CAdK,CAuBL,aAAK;yHAAL,CAvBK,CAyBL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,EAAiC;;CAAjC,CAAL,CAzBK,CA4BL,aAAK,iHAAL,CA5BK,CA6BL,SAAQ,CACN,KAAM,qBADA,CAAR,CAEK,qBAFL,CA7BK,CAgCL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,EAAiC;;;CAAjC,CAAL,CAhCK,CAoCL,aAAK;kGAAL,CApCK,CAsCL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,EAAiC;;CAAjC,CAAL,CAtCK,CAyCL,aAAK;0FAAL,CAzCK,CA2CL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,EAAiC;;;;;;;;CAAjC,CAAL,CA3CK,CAoDL,aAAK,+KAAL,CApDK,CAqDL,aAAK,mIAAL,CArDK,CAsDL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,EAAiC;;;;;;;;CAAjC,CAAL,CAtDK,CA+DL,aAAK;yHAAL,CA/DK,CAAP,CAkED,CAED,CACAD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {};\nexport const metadata = {\n  \"id\": \"js/adva/callbacks\",\n  \"title\": \"callbacks\",\n  \"description\": \"# Call Backs in Javascript and why you need them  \",\n  \"source\": \"@site/docs/js/adva/callbacks.md\",\n  \"permalink\": \"/docs/js/adva/callbacks\"\n};\n  /* @jsx mdx */\n\nexport const rightToc = [];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"call-backs-in-javascript-and-why-you-need-them\"\n    }}>{`Call Backs in Javascript and why you need them`}</h1>\n    <h1 {...{\n      \"id\": \"what-is-a-callback\"\n    }}>{`What is a callback`}</h1>\n    <p>{`A callback is a function that is to be executed after another function has finished executing — hence the name ‘call back’.`}</p>\n    <h1 {...{\n      \"id\": \"why-do-we-need-them\"\n    }}>{`Why do we need them`}</h1>\n    <p>{`For one very important reason — JavaScript is an event driven language. \\\\\nThis means that instead of waiting for a response before moving on, JavaScript will keep executing while listening for other events. `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`function first(){\n  console.log(1);\n}\nfunction second(){\n  console.log(2);\n}\nfirst();\nsecond();\n`}</code></pre>\n    <p>{`As you would expect, \\\\\nthe function first is executed first, and the function second is executed second — logging the following to the console:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`// 1\n// 2\n`}</code></pre>\n    <p>{` Callbacks are a way to make sure certain code doesn’t execute until other code has already finished execution.`}</p>\n    <h1 {...{\n      \"id\": \"creating-a-callback\"\n    }}>{`Creating a callback`}</h1>\n    <pre><code parentName=\"pre\" {...{}}>{`function doHomework(subject) {\n alert(\\`Starting my \\${subject} homework.\\`);\n}\n`}</code></pre>\n    <p>{` Above, we’ve created the function doHomework . Our function takes one variable, \\\\\nthe subject that we are working on. Call your function by typing the following into your console:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`doHomework('math');\n// Alerts: Starting my math homework.\n`}</code></pre>\n    <p>{` Now lets add in our callback — as our last parameter in the doHomework() function we can pass in callback. \\\\\nThe callback function is then defined in the second argument of our call to doHomework().`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`function doHomework(subject, callback) {\n alert(\\`Starting my \\${subject} homework.\\`);\n callback();\n}\n\ndoHomework('math', function() {\n alert('Finished my homework');\n});\n`}</code></pre>\n    <p>{`As you’ll see, if you type the above code into your console you will get two alerts back to back: Your ‘starting homework’ alert, followed by your ‘finished homework’ alert.`}</p>\n    <p>{`But callback functions don’t always have to be defined in our function call. They can be defined elsewhere in our code like this:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`function doHomework(subject, callback) {\n  alert(\\`Starting my \\${subject} homework.\\`);\n  callback();\n}\nfunction alertFinished(){\n  alert('Finished my homework');\n}\ndoHomework('math', alertFinished);\n`}</code></pre>\n    <p>{` This result of this example is exactly the same as the previous example, but the setup is a little different. \\\\\nAs you can see, we’ve passed the alertFinished function definition as an argument during our doHomework() function call!`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}